* 객체 지향 설계의 5 원칙 S.O.L.I.D *

1. 단일 책임의 원칙 - SRP (Single Responsibility Principle)

2. 개방 폐쇄의 원칙 - OCP (Open Closed Principle)

3. 리스코프 치환의 원칙 - LSP (Liskov Substitution Principle)

4. 인터페이스 분리의 원칙 - ISP (Interface Segregation Principle)

5. 의존 역전의 원칙 - DIP (Dependency Inversion Principle)


* Week 02 - 전략 패턴(Strategy Pattern)
- 동일 계열의 알고리즘군을 정의하고 → 전략 구현체로 정의
- 각각의 알고리즘을 캡슐화하여 → 인터페이스로 추상화
- 이들을 상호 교환이 가능하도록 만든다. → 합성(composition)으로 구성
- 알고리즘을 사용하는 클라이언트와 상관없이 독립적으로 → 컨텍스트 객체 수정 없이
- 알고리즘을 다양하게 변경할 수 있게 한다. → 메소드를 통해 전략 객체를 실시간으로 변경함으로써 전략을 변경

* Week 03 - 옵저버 패턴(Observer Pattern)
- 한 객체의 상태가 바뀌면 그 객체에 의존하는
 다른 객체에게 연락이 가고 자동으로 내용이 갱신되는
 방식으로 일대다(one-to-many) 의존성을 정의